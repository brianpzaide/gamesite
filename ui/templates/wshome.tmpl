<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>

      * {
        box-sizing: border-box;
      }

      body {
        font-family: Arial, Helvetica, sans-serif;
        background: lightyellow;
        
      }

      .row {
        margin: 20px auto;
        width: 30%;
      }


      .card {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        margin: auto;
        padding: 16px;
        text-align: center;
        background-color: #eac170;
        
      }

      .card:hover {
        box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
      }

      .button_main {
        background-color: crimson;
        border: none;
        color: white;
        padding: 10px 20px;
        text-align: center;
        margin-left: 25%;
        margin-top: 20px;
        cursor: pointer;
        border-radius: 16px;
        width: 50%;
      }

      .button {
        background-color: crimson;
        border: none;
        color: white;
        padding: 10px 20px;
        text-align: center;
        display: inline-block;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 16px;
        width: 100%;
      }
      img {
        width: 100%; 
        height: 100%;
      }

      .container {
        padding: 2px 16px;
      }
    </style>
  </head>
<body>

<h2 style="color:crimson;font-family:cursive;text-align: center;">Welcome</h2>

{{if .Games}}
  {{range .Games}}
    <div class="row">
      <div class="card">
        <h4 style="color:crimson;font-family:cursive;text-align: center;">{{.GameName}}</h4>
        <img src="/static/{{.GameImageURL}}" alt="Avatar" width="200" height="200">
        <div class="container">
          <button class="button" onclick="createRoom({{.GameId}}, {{.GameName}})">Create</button> 
        </div>
      </div>
    </div>
  {{end}}
  <script>

    const baseurl = "/gamesite/";

    function createRoom(gameId, gameName) {
      var xhttp = new XMLHttpRequest();
      xhttp.open("GET", baseurl + "create/" + gameId, true);
      xhttp.send();
      xhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
          const obj = JSON.parse(this.responseText);
          const roomurl = obj.roomurl;
          const roomid = obj.roomid;
          const roomcreatedtext = "Room for "+ gameName + " game created.\nRoom id is :" + roomid + ".\nPlease share the roomId with someone you want to play with.\nThe room will be destroyed automatically if other person does not join the room within 5 minutes."
          alert(roomcreatedtext);
          console.log(roomurl)
          window.location.replace(baseurl+"rooms/"+roomid);
        }
      };
    }

    function joinFunction() {
      let roomid = prompt("Please enter the roomID");
      let text;
      if (roomid == null || roomid == "") {
        alert("roomid cannot be blank");
      } else {
        window.location.href = baseurl + "rooms/"+ roomid;
      }  
    }
  </script>
  <button class="button_main" onclick="joinFunction()">Join</button>
{{else}}
  <h2 style="color:crimson;font-family:cursive;text-align: center;">No games yet, come back later</h2>
{{end}}




</body>
</html>
